{"ast":null,"code":"import mongoose from'mongoose';var UserSchema=new mongoose.Schema({email:{type:String,required:true,unique:true,lowercase:true},encryptedPassword:{type:String,required:true},role:{type:String,enum:['admin','restricted'],required:true}},{timestamps:true});var Users=mongoose.model('Users',UserSchema);export default Users;","map":{"version":3,"names":["mongoose","UserSchema","Schema","email","type","String","required","unique","lowercase","encryptedPassword","role","enum","timestamps","Users","model"],"sources":["/workspace/adminbro-dashboard/src/db/Users.ts"],"sourcesContent":["import mongoose from 'mongoose'\n\nconst UserSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    lowercase: true\n  },\n  encryptedPassword: {\n    type: String,\n    required: true\n  },\n  role: { type: String, enum: ['admin', 'restricted'], required: true }\n}, {\n  timestamps: true\n})\n\nconst Users = mongoose.model('Users', UserSchema)\n\nexport default Users\n"],"mappings":"AAAA,MAAO,CAAAA,QAAQ,KAAM,UAAU,CAE/B,GAAM,CAAAC,UAAU,CAAG,GAAI,CAAAD,QAAQ,CAACE,MAAM,CAAC,CACrCC,KAAK,CAAE,CACLC,IAAI,CAAEC,MAAM,CACZC,QAAQ,CAAE,IAAI,CACdC,MAAM,CAAE,IAAI,CACZC,SAAS,CAAE,IACb,CAAC,CACDC,iBAAiB,CAAE,CACjBL,IAAI,CAAEC,MAAM,CACZC,QAAQ,CAAE,IACZ,CAAC,CACDI,IAAI,CAAE,CAAEN,IAAI,CAAEC,MAAM,CAAEM,IAAI,CAAE,CAAC,OAAO,CAAE,YAAY,CAAC,CAAEL,QAAQ,CAAE,IAAK,CACtE,CAAC,CAAE,CACDM,UAAU,CAAE,IACd,CAAC,CAAC,CAEF,GAAM,CAAAC,KAAK,CAAGb,QAAQ,CAACc,KAAK,CAAC,OAAO,CAAEb,UAAU,CAAC,CAEjD,cAAe,CAAAY,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}