{"ast":null,"code":"import _regeneratorRuntime from\"/home/gitpod/.nvm/versions/node/v16.19.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/gitpod/.nvm/versions/node/v16.19.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import express from'express';import bcrypt from'bcrypt';import Users from'./db/Users';import mongoose from'mongoose';import AdminBroExpress from'@admin-bro/express';import adminBroOptions from'./adminbro-options';require('dotenv').config();var router=AdminBroExpress.buildAuthenticatedRouter(adminBroOptions,{authenticate:function(){var _authenticate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(email,password){var user,matched;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return Users.findOne({email:email});case 2:user=_context.sent;if(!user){_context.next=9;break;}_context.next=6;return bcrypt.compare(password,user.encryptedPassword);case 6:matched=_context.sent;if(!matched){_context.next=9;break;}return _context.abrupt(\"return\",user);case 9:return _context.abrupt(\"return\",false);case 10:case\"end\":return _context.stop();}},_callee);}));function authenticate(_x,_x2){return _authenticate.apply(this,arguments);}return authenticate;}(),cookiePassword:process.env.COOKIE_PASSWORD});var app=express();app.use('/',router);var run=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return mongoose.connect(\"mongodb+srv://\".concat(process.env.DB_USER,\":\").concat(process.env.DB_PASSWORD,\"@cluster0.ehnrp.mongodb.net/\").concat(process.env.DB_NAME,\"?retryWrites=true&w=majority\"),{useNewUrlParser:true,useUnifiedTopology:true,useFindAndModify:false,useCreateIndex:true}).then(function(){console.log('DB connected');});case 2:_context2.next=4;return app.listen(8080);case 4:case\"end\":return _context2.stop();}},_callee2);}));return function run(){return _ref.apply(this,arguments);};}();run();","map":{"version":3,"names":["express","bcrypt","Users","mongoose","AdminBroExpress","adminBroOptions","require","config","router","buildAuthenticatedRouter","authenticate","_authenticate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","email","password","user","matched","wrap","_callee$","_context","prev","next","findOne","sent","compare","encryptedPassword","abrupt","stop","_x","_x2","apply","arguments","cookiePassword","process","env","COOKIE_PASSWORD","app","use","run","_ref","_callee2","_callee2$","_context2","connect","concat","DB_USER","DB_PASSWORD","DB_NAME","useNewUrlParser","useUnifiedTopology","useFindAndModify","useCreateIndex","then","console","log","listen"],"sources":["/workspace/adminbro-dashboard/src/index.ts"],"sourcesContent":["import express from 'express'\nimport bcrypt from 'bcrypt'\nimport Users from './db/Users'\nimport mongoose from 'mongoose'\nimport AdminBroExpress from '@admin-bro/express'\nimport adminBroOptions from './adminbro-options'\n\nrequire('dotenv').config()\n\nconst router = AdminBroExpress.buildAuthenticatedRouter(adminBroOptions, {\n  authenticate: async (email: any, password: any) => {\n    const user = await Users.findOne({ email })\n    if (user) {\n      const matched = await bcrypt.compare(password, user.encryptedPassword)\n      if (matched) {\n        return user\n      }\n    }\n    return false\n  },\n  cookiePassword: process.env.COOKIE_PASSWORD\n})\n\nconst app = express()\n\napp.use('/', router)\n\nconst run = async () => {\n  await mongoose.connect(`mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASSWORD}@cluster0.ehnrp.mongodb.net/${process.env.DB_NAME}?retryWrites=true&w=majority`, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    useFindAndModify: false,\n    useCreateIndex: true\n  }).then(function(){\n    console.log('DB connected')\n  })\n\n  await app.listen(8080)\n}\n\nrun()\n"],"mappings":"0UAAA,MAAO,CAAAA,OAAO,KAAM,SAAS,CAC7B,MAAO,CAAAC,MAAM,KAAM,QAAQ,CAC3B,MAAO,CAAAC,KAAK,KAAM,YAAY,CAC9B,MAAO,CAAAC,QAAQ,KAAM,UAAU,CAC/B,MAAO,CAAAC,eAAe,KAAM,oBAAoB,CAChD,MAAO,CAAAC,eAAe,KAAM,oBAAoB,CAEhDC,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,EAAE,CAE1B,GAAM,CAAAC,MAAM,CAAGJ,eAAe,CAACK,wBAAwB,CAACJ,eAAe,CAAE,CACvEK,YAAY,gBAAAC,aAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAE,SAAAC,QAAOC,KAAU,CAAEC,QAAa,MAAAC,IAAA,CAAAC,OAAA,QAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SACzB,CAAAtB,KAAK,CAACuB,OAAO,CAAC,CAAET,KAAK,CAALA,KAAM,CAAC,CAAC,QAArCE,IAAI,CAAAI,QAAA,CAAAI,IAAA,KACNR,IAAI,EAAAI,QAAA,CAAAE,IAAA,UAAAF,QAAA,CAAAE,IAAA,SACgB,CAAAvB,MAAM,CAAC0B,OAAO,CAACV,QAAQ,CAAEC,IAAI,CAACU,iBAAiB,CAAC,QAAhET,OAAO,CAAAG,QAAA,CAAAI,IAAA,KACTP,OAAO,EAAAG,QAAA,CAAAE,IAAA,iBAAAF,QAAA,CAAAO,MAAA,UACFX,IAAI,gBAAAI,QAAA,CAAAO,MAAA,UAGR,KAAK,2BAAAP,QAAA,CAAAQ,IAAA,MAAAf,OAAA,GACb,YAAAL,aAAAqB,EAAA,CAAAC,GAAA,SAAArB,aAAA,CAAAsB,KAAA,MAAAC,SAAA,UAAAxB,YAAA,KACDyB,cAAc,CAAEC,OAAO,CAACC,GAAG,CAACC,eAC9B,CAAC,CAAC,CAEF,GAAM,CAAAC,GAAG,CAAGvC,OAAO,EAAE,CAErBuC,GAAG,CAACC,GAAG,CAAC,GAAG,CAAEhC,MAAM,CAAC,CAEpB,GAAM,CAAAiC,GAAG,6BAAAC,IAAA,CAAA9B,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA6B,SAAA,SAAA9B,mBAAA,GAAAO,IAAA,UAAAwB,UAAAC,SAAA,iBAAAA,SAAA,CAAAtB,IAAA,CAAAsB,SAAA,CAAArB,IAAA,SAAAqB,SAAA,CAAArB,IAAA,SACJ,CAAArB,QAAQ,CAAC2C,OAAO,kBAAAC,MAAA,CAAkBX,OAAO,CAACC,GAAG,CAACW,OAAO,MAAAD,MAAA,CAAIX,OAAO,CAACC,GAAG,CAACY,WAAW,iCAAAF,MAAA,CAA+BX,OAAO,CAACC,GAAG,CAACa,OAAO,iCAAgC,CACtKC,eAAe,CAAE,IAAI,CACrBC,kBAAkB,CAAE,IAAI,CACxBC,gBAAgB,CAAE,KAAK,CACvBC,cAAc,CAAE,IAClB,CAAC,CAAC,CAACC,IAAI,CAAC,UAAU,CAChBC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAC7B,CAAC,CAAC,QAAAZ,SAAA,CAAArB,IAAA,SAEI,CAAAe,GAAG,CAACmB,MAAM,CAAC,IAAI,CAAC,yBAAAb,SAAA,CAAAf,IAAA,MAAAa,QAAA,GACvB,kBAXK,CAAAF,GAAGA,CAAA,SAAAC,IAAA,CAAAT,KAAA,MAAAC,SAAA,OAWR,CAEDO,GAAG,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}